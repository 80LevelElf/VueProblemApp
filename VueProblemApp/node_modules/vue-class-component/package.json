{
  "name": "vue-class-component",
  "version": "6.1.2",
  "description": "ES201X/TypeScript class decorator for Vue components",
  "main": "dist/vue-class-component.common.js",
  "typings": "lib/index.d.ts",
  "files": [
    "dist",
    "lib"
  ],
  "scripts": {
    "build": "npm run build:ts && npm run build:main",
    "build:ts": "tsc -p .",
    "build:main": "node build/build.js",
    "clean": "rimraf ./lib",
    "example": "npm run build && webpack --config example/webpack.config.js",
    "dev": "webpack --config example/webpack.config.js --watch",
    "dev:test": "node build/dev-test.js",
    "test": "npm run build && webpack --config test/webpack.config.js && mocha test/test.build.js",
    "release": "bash build/release.sh"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/vuejs/vue-class-component.git"
  },
  "keywords": [
    "vue",
    "class",
    "babel",
    "typescript"
  ],
  "author": {
    "name": "Evan You"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/vuejs/vue-class-component/issues"
  },
  "homepage": "https://github.com/vuejs/vue-class-component#readme",
  "devDependencies": {
    "@types/chai": "^4.0.1",
    "@types/mocha": "^2.2.41",
    "babel-core": "^6.25.0",
    "babel-loader": "^7.1.1",
    "babel-plugin-transform-class-properties": "^6.24.1",
    "babel-plugin-transform-decorators-legacy": "^1.3.4",
    "babel-preset-es2015": "^6.24.1",
    "chai": "^4.0.2",
    "css-loader": "^0.28.4",
    "mocha": "^4.0.1",
    "rimraf": "^2.6.1",
    "rollup": "^0.50.0",
    "rollup-plugin-replace": "^2.0.0",
    "testdouble": "^3.2.1",
    "ts-loader": "^2.2.1",
    "typescript": "^2.5.2",
    "uglify-js": "^3.0.22",
    "vue": "^2.5.0",
    "vue-loader": "^13.0.0",
    "vue-template-compiler": "^2.5.0",
    "webpack": "^3.0.0"
  },
  "readme": "# vue-class-component\n\n> ECMAScript / TypeScript decorator for class-style Vue components.\n\n[![npm](https://img.shields.io/npm/v/vue-class-component.svg)](https://www.npmjs.com/package/vue-class-component)\n\n### Usage\n\n**Required**: [ECMAScript stage 1 decorators](https://github.com/wycats/javascript-decorators/blob/master/README.md).\nIf you use Babel, [babel-plugin-transform-decorators-legacy](https://github.com/loganfsmyth/babel-plugin-transform-decorators-legacy) is needed.\nIf you use TypeScript, enable `--experimentalDecorators` flag.\n\n> It does not support the stage 2 decorators yet since mainstream transpilers still transpile to the old decorators.\n\nNote:\n\n1. `methods` can be declared directly as class member methods.\n\n2. Computed properties can be declared as class property accessors.\n\n3. Initial `data` can be declared as class properties ([babel-plugin-transform-class-properties](https://babeljs.io/docs/plugins/transform-class-properties/) is required if you use Babel).\n\n4. `data`, `render` and all Vue lifecycle hooks can be directly declared as class member methods as well, but you cannot invoke them on the instance itself. When declaring custom methods, you should avoid these reserved names.\n\n5. For all other options, pass them to the decorator function.\n\n### Example\n\nFollowing is the example written in Babel. If you are looking for TypeScript version, [it's in the example directory](example/App.vue).\n\n``` vue\n<template>\n  <div>\n    <input v-model=\"msg\">\n    <p>prop: {{propMessage}}</p>\n    <p>msg: {{msg}}</p>\n    <p>helloMsg: {{helloMsg}}</p>\n    <p>computed msg: {{computedMsg}}</p>\n    <button @click=\"greet\">Greet</button>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue'\nimport Component from 'vue-class-component'\n\n@Component({\n  props: {\n    propMessage: String\n  }\n})\nexport default class App extends Vue {\n  // initial data\n  msg = 123\n\n  // use prop values for initial data\n  helloMsg = 'Hello, ' + this.propMessage\n\n  // lifecycle hook\n  mounted () {\n    this.greet()\n  }\n\n  // computed\n  get computedMsg () {\n    return 'computed ' + this.msg\n  }\n\n  // method\n  greet () {\n    alert('greeting: ' + this.msg)\n  }\n}\n</script>\n```\n\nYou may also want to check out the `@prop` and `@watch` decorators provided by [vue-property-decorators](https://github.com/kaorun343/vue-property-decorator).\n\n### Create Custom Decorators\n\nYou can extend the functionality of this library by creating your own decorators. vue-class-component provides `createDecorator` helper to create custom decorators. `createDecorator` expects a callback function as the 1st argument and the callback will receive following arguments:\n\n- `options`: Vue component options object. Changes for this object will affect the provided component.\n- `key`: The property or method key that the decorator is applied.\n- `parameterIndex`: The index of a decorated argument if the custom decorator is used for an argument.\n\nExample of creating `NoCache` decorator:\n\n``` js\n// decorators.js\nimport { createDecorator } from 'vue-class-component'\n\nexport const NoCache = createDecorator((options, key) => {\n  // component options should be passed to the callback\n  // and update for the options object affect the component\n  options.computed[key].cache = false\n})\n```\n\n``` js\nimport { NoCache } from './decorators'\n\n@Component\nclass MyComp extends Vue {\n  // the computed property will not be cached\n  @NoCache\n  get random () {\n    return Math.random()\n  }\n}\n```\n\n### Adding Custom Hooks\n\nIf you use some Vue plugins like Vue Router, you may want class components to resolve hooks that they provides. For that case, `Component.registerHooks` allows you to register such hooks:\n\n```js\n// class-component-hooks.js\nimport Component from 'vue-class-component'\n\n// Register the router hooks with their names\nComponent.registerHooks([\n  'beforeRouteEnter',\n  'beforeRouteLeave',\n  'beforeRouteUpdate' // for vue-router 2.2+\n])\n```\n\n```js\n// MyComp.js\nimport Vue from 'vue'\nimport Component from 'vue-class-component'\n\n@Component\nclass MyComp extends Vue {\n  // The class component now treats beforeRouteEnter\n  // and beforeRouteLeave as Vue Router hooks\n  beforeRouteEnter () {\n    console.log('beforeRouteEnter')\n  }\n\n  beforeRouteLeave () {\n    console.log('beforeRouteLeave')\n  }\n}\n```\n\nNote that you have to register the hooks before component definition.\n\n```js\n// main.js\n\n// Make sure to register before importing any components\nimport './class-component-hooks'\n\nimport Vue from 'vue'\nimport MyComp from './MyComp'\n\nnew Vue({\n  el: '#app',\n  components: {\n    MyComp\n  }\n})\n```\n\n### Caveats of Class Properties\n\nvue-class-component collects class properties as Vue instance data by instantiating the original constructor under the hood. While we can define instance data like native class manner, we sometimes need to know how it works.\n\n#### `this` value in property\n\nIf you define an arrow function as a class property and access `this` in it, it will not work. This is because `this` is just a proxy object to Vue instance when initializing class properties:\n\n```js\n@Component\nclass MyComp extends Vue {\n  foo = 123\n\n  bar = () => {\n    // Does not update the expected property.\n    // `this` value is not a Vue instance in fact.\n    this.foo = 456\n  }\n}\n```\n\nYou can simply define a method instead of a class property in that case because Vue will bind the instance automatically:\n\n```js\n@Component\nclass MyComp extends Vue {\n  foo = 123\n\n  bar () {\n    // Correctly update the expected property.\n    this.foo = 456\n  }\n}\n```\n\n#### `undefined` will not be reactive\n\nTo take consistency between the decorator behavior of Babel and TypeScript, vue-class-component does not make a property reactive if it has `undefined` as initial value. You should use `null` as initial value or use `data` hook to initialize `undefined` property instead.\n\n```js\n@Component\nclass MyComp extends Vue {\n  // Will not be reactive\n  foo = undefined\n\n  // Will be reactive\n  bar = null\n\n  data () {\n    return {\n      // Will be reactive\n      baz: undefined\n    }\n  }\n}\n```\n\n### Build the Example\n\n``` bash\n$ npm install && npm run example\n```\n\n### Questions\n\nFor questions and support please use the [the official forum](http://forum.vuejs.org) or [community chat](https://chat.vuejs.org/). The issue list of this repo is **exclusively** for bug reports and feature requests.\n\n### License\n\n[MIT](http://opensource.org/licenses/MIT)\n",
  "readmeFilename": "README.md",
  "_id": "vue-class-component@6.1.2",
  "_shasum": "87ac0265b0db71a3f49f10d90e4f69f9be9c2fbd",
  "_from": "vue-class-component@^6.0.0",
  "_resolved": "https://registry.npmjs.org/vue-class-component/-/vue-class-component-6.1.2.tgz"
}
